af_qty = 5
af_cost = 1000
af_luck_percent = 5
ammo_qty = 5
ammo_cost = 1000

function count_items_table(first_speaker, second_speaker)
	local item_list = {}
	local item_object = nil
	local counter = 0
	local item_section = nil

	for index = 0, db.actor:object_count() - 1 do
		item_object = db.actor:object(index)
		item_section = item_object:section()
		if item_list[item_section] == nil then
			item_list[item_section] = 1
		else
			item_list[item_section] = item_list[item_section] + 1
		end
--		news_manager.relocate_item(db.actor, "out", item_section)
--		news_manager.relocate_money(db.actor, "out", item_list[item_section])
--		news_manager.relocate_money(db.actor, "out", db.actor:money())
	end
	if item_list == nil then
		if db.storage[db.actor:id()].pstor["maxfu_item_list"] then
			db.storage[db.actor:id()].pstor["maxfu_item_list"] = nil
		end
	else
		if db.storage[db.actor:id()].pstor == nil then
			db.storage[db.actor:id()].pstor = {}
		end
		db.storage[db.actor:id()].pstor["maxfu_item_list"] = item_list
	end
end

function remove_items(section_name, qty)
	local inv_item = nil
	local item_id = nil
	local item_count = 0

	for index = 0, db.actor:object_count() - 1 do
		inv_item = db.actor:object(index)
		if inv_item:section() == section_name then
			if item_count < qty then
				item_id = inv_item:id()
				alife():release(alife():object(tonumber(item_id)), true)
				news_manager.relocate_item(db.actor, "out", section_name)
				item_count = item_count + 1
			end
		end
	end
end

function check_item_qty(item_section, qty, cost)
	local item_qty = 0
	if db.storage[db.actor:id()].pstor ~= nil then
		local item_list = db.storage[db.actor:id()].pstor["maxfu_item_list"]
		if item_list[item_section] ~= nil then
			item_qty = item_list[item_section]
		end
	end
	if item_qty >= qty and db.actor:money() >= cost then
		return true
	end
--	news_manager.relocate_item(db.actor, "out", item_section)
--	news_manager.relocate_money(db.actor, "out", item_qty)
--	news_manager.relocate_money(db.actor, "out", db.actor:money())
	return false
end

function enhance_af(trader, actor, section_name)
	remove_items(section_name, af_qty)
    dialogs.relocate_item_section(trader, section_name.."_m1", "in")
	dialogs.relocate_money(actor, af_cost, "out")
end


function check_af_medusa()
	local section_name = "af_medusa"
	return check_item_qty(section_name, af_qty, af_cost)
end

function check_af_blood()
	local section_name = "af_blood"
	return check_item_qty(section_name, af_qty, af_cost)
end

function check_af_cristall_flower()
	local section_name = "af_cristall_flower"
	return check_item_qty(section_name, af_qty, af_cost)
end

function check_af_mincer_meat()
	local section_name = "af_mincer_meat"
	return check_item_qty(section_name, af_qty, af_cost)
end

function check_af_rusty_kristall()
	local section_name = "af_rusty_kristall"
	return check_item_qty(section_name, af_qty, af_cost)
end

function check_ammo_9_18_fmj()
	local section_name = "ammo_9x18_fmj"
	return check_item_qty(section_name, ammo_qty, ammo_cost)
end


function enhance_af_medusa(trader, actor)
	local luck = math.random(0,99)
	remove_items("af_medusa", af_qty)
	if luck >= af_luck_percent then
		dialogs.relocate_item_section(trader, "af_medusa_m1", "in")
	else
		dialogs.relocate_item_section(trader, "af_medusa_m2", "in")
	end
	dialogs.relocate_money(actor, af_cost, "out")
end

function enhance_af_blood(trader, actor)
	local luck = math.random(0,99)
	remove_items("af_blood", af_qty)
	if luck >= af_luck_percent then
		dialogs.relocate_item_section(trader, "af_blood_m1", "in")
	else
		dialogs.relocate_item_section(trader, "af_blood_m2", "in")
	end
	dialogs.relocate_money(actor, af_cost, "out")
end

function enhance_af_cristall_flower(trader, actor)
	local luck = math.random(0,99)
	remove_items("af_cristall_flower", af_qty)
	if luck >= af_luck_percent then
		dialogs.relocate_item_section(trader, "af_cristall_flower_m1", "in")
	else
		dialogs.relocate_item_section(trader, "af_cristall_flower_m2", "in")
	end
	dialogs.relocate_money(actor, af_cost, "out")
end

function enhance_af_mincer_meat(trader, actor)
	local luck = math.random(0,99)
	remove_items("af_mincer_meat", af_qty)
	if luck >= af_luck_percent then
		dialogs.relocate_item_section(trader, "af_mincer_meat_m1", "in")
	else
		dialogs.relocate_item_section(trader, "af_mincer_meat_m2", "in")
	end
	dialogs.relocate_money(actor, af_cost, "out")
end

function enhance_af_rusty_kristall(trader, actor)
	local luck = math.random(0,99)
	remove_items("af_rusty_kristall", af_qty)
	if luck >= af_luck_percent then
		dialogs.relocate_item_section(trader, "af_rusty_kristall_m1", "in")
	else
		dialogs.relocate_item_section(trader, "af_rusty_kristall_m2", "in")
	end
	dialogs.relocate_money(actor, af_cost, "out")
end

function enhance_ammo_9_18_fmj(trader, actor)
	remove_items("ammo_9x18_fmj", ammo_qty)
    dialogs.relocate_item_section(trader, "ammo_9x18_heavy", "in")
	dialogs.relocate_money(actor, ammo_cost, "out")
end
